apply plugin: 'com.android.application'

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.appcompat_v7
    defaultConfig {
        applicationId "com.railway.ydhdemo"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // true - 打开混淆
            minifyEnabled true
            // true - 打开资源压缩 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api "com.jakewharton:butterknife:$versions.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$versions.butterknife"

    // Retrofit库
    api "com.squareup.retrofit2:retrofit:$versions.retrofit"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    api "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
   // api 'com.google.guava:guava:20.0'
    //Rxjava库
    api "io.reactivex.rxjava2:rxandroid:$versions.rxjava"
    api "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    //rxlifecycle用于管理生命周期，避免内存溢出
    api "com.trello.rxlifecycle2:rxlifecycle:$versions.rxjava"
    api "com.trello.rxlifecycle2:rxlifecycle-components:$versions.rxjava"
    // Okhttp库
    api "com.squareup.okhttp3:okhttp:$versions.okhttp"
    api "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    //dagger时候添加的依赖
    api "com.google.dagger:dagger:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"
}
